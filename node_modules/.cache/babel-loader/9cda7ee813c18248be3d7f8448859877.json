{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Desktop\\\\ProjetcForGit\\\\ReactMovies\\\\src\\\\componentes\\\\filmes.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Filmes() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [selectedYear, setSelectedYear] = useState('');\n  const ApiKey = '935f652046d51d0ca0b16edcbdbbb106';\n  useEffect(() => {\n    const genreId = selectedGenre ? `&with_genres=${selectedGenre}` : '';\n    const yearParam = selectedYear ? `&year=${selectedYear}` : '';\n    axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=${ApiKey}${genreId}${yearParam}`).then(response => {\n      setMovies(response.data.results);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [selectedGenre, selectedYear]);\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${ApiKey}`).then(response => {\n      setGenres(response.data.genres);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [selectedGenre]);\n  const filteredMovies = movies.filter(movie => {\n    if (selectedGenre && !movie.genre_ids.includes(parseInt(selectedGenre))) {\n      return false;\n    }\n    if (selectedYear && movie.release_date.substring(0, 4) !== selectedYear) {\n      return false;\n    }\n    return true;\n  });\n  const movieList = movies;\n  const slicedMovies = filteredMovies;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"mr-2\",\n        value: selectedGenre,\n        onChange: e => setSelectedGenre(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Todos os G\\xEAneros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.id,\n          children: genre.name\n        }, genre.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedYear,\n        onChange: e => setSelectedYear(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Todos os Anos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), [...new Set(movieList.map(dataMovie => dataMovie.release_date.substring(0, 4)))].map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: year,\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex  flex-wrap gap-4\",\n      children: slicedMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-40\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-15\",\n            src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n            alt: movie.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), console.log(movie.original_title), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.vote_average\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Filmes, \"MuDCb5vZu+QkplluOeZni5abzcM=\");\n_c = Filmes;\nexport default Filmes;\nvar _c;\n$RefreshReg$(_c, \"Filmes\");","map":{"version":3,"names":["axios","useState","useEffect","jsxDEV","_jsxDEV","Filmes","_s","movies","setMovies","genres","setGenres","selectedGenre","setSelectedGenre","selectedYear","setSelectedYear","ApiKey","genreId","yearParam","get","then","response","data","results","console","log","catch","error","filteredMovies","filter","movie","genre_ids","includes","parseInt","release_date","substring","movieList","slicedMovies","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","genre","id","name","Set","dataMovie","year","src","poster_path","alt","original_title","vote_average","_c","$RefreshReg$"],"sources":["C:/Users/lucas/Desktop/ProjetcForGit/ReactMovies/src/componentes/filmes.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Filmes() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState('');\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const ApiKey = '935f652046d51d0ca0b16edcbdbbb106';\r\n\r\n  useEffect(() => {\r\n    const genreId = selectedGenre ? `&with_genres=${selectedGenre}` : '';\r\n    const yearParam = selectedYear ? `&year=${selectedYear}` : '';\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/discover/movie?api_key=${ApiKey}${genreId}${yearParam}`\r\n      )\r\n      .then(response => {\r\n        setMovies(response.data.results);\r\n        console.log(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, [selectedGenre, selectedYear]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${ApiKey}`)\r\n      .then(response => {\r\n        setGenres(response.data.genres);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, [selectedGenre]);\r\n\r\n  const filteredMovies = movies.filter(movie => {\r\n    if (selectedGenre && !movie.genre_ids.includes(parseInt(selectedGenre))) {\r\n      return false;\r\n    }\r\n    if (selectedYear && movie.release_date.substring(0, 4) !== selectedYear) {\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  const movieList = movies;\r\n  const slicedMovies = filteredMovies;\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"m-4\">\r\n        <select\r\n          className=\"mr-2\"\r\n          value={selectedGenre}\r\n          onChange={e => setSelectedGenre(e.target.value)}\r\n        >\r\n          <option value=\"\">Todos os GÃªneros</option>\r\n          {genres.map(genre => (\r\n            <option key={genre.id} value={genre.id}>\r\n              {genre.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <select\r\n          value={selectedYear}\r\n          onChange={e => setSelectedYear(e.target.value)}\r\n        >\r\n          <option value=\"\">Todos os Anos</option>\r\n          {[\r\n            ...new Set(\r\n              movieList.map(dataMovie => dataMovie.release_date.substring(0, 4))\r\n            ),\r\n          ].map(year => (\r\n            <option value={year}>{year}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"flex  flex-wrap gap-4\">\r\n        {slicedMovies.map(movie => (\r\n          <div className=\"w-40\" key={movie.id}>\r\n            <div className=\"max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700\">\r\n              <img\r\n                className=\"w-15\"\r\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                alt={movie.original_title}\r\n              />\r\n              {console.log(movie.original_title)}\r\n              <p>{movie.original_title}</p>\r\n              <p>{movie.vote_average}</p>\r\n              {/* <p>{movie.overview}</p> \r\n              <a\r\n                href={`https://api.themoviedb.org/3/movie/603/external_ids?api_key=${ApiKey}`}\r\n              >\r\n                Link para o FIlme\r\n              </a>*/}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filmes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}